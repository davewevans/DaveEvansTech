@using BlazorCaptcha
@using Syncfusion.Blazor.Navigations
@using ChangeEventArgs = Microsoft.AspNetCore.Components.ChangeEventArgs


@if (!_notARobot)
{
    <div>
        <Captcha @bind-CaptchaWord="@_captcha" CharNumber="@_captchaLetters" Width="125" />
    </div>
    
    <div class="mt-4 mb-2">
        <span class="text-gray-700 font-semibold">Please enter captcha characters:</span>
    </div>
    
    <div class="flex flex-col space-y-4 md:flex-row md:space-x-4 md:space-y-0 items-center">
        <div class="">
            <input class="form-input block w-40 border-2 border-gray-600 p-2" 
                   placeholder="captcha characters" 
                   type="text" 
                   max="@_captchaLetters" 
                   @onchange="OnCaptchaEnteredChanged">
        </div>
        <div>
            <button
                class="inline-block px-2 py-2 text-xs font-medium font-mono leading-6 text-center text-white uppercase transition bg-primary rounded shadow ripple hover:shadow-lg hover:bg-green-300 hover:text-primary focus:outline-none"
                type="button"
                @onclick="OnCaptchaSubmit">
                <i class="fas fa-robot"></i> I'm Not A Robot
            </button>
        </div>
    </div>
   
}
else
{
    <div class="flex flex-row space-x-4 items-center">
        <i class="fa fa-check-circle text-primary text-xl"></i>
        <p class="text-lg font-semibold font-mono">You are not a robot!</p>
    </div>
}

@if (_showFailedMessage)
{
    <div class="block text-sm text-left text-gray-700 bg-red-200 border border-red-400 h-auto items-center flex p-4 rounded-sm mt-6" role="alert">
        Hmmmm. Looks like you could be a robot. If you're human, try entering the captcha characters again and then click on the green button. Hit the refresh button if the characters are hard to read. If you're a robot, please leave!
    </div>
}


@code {
    
    [Parameter]
    public EventCallback<bool> OnCaptchaEnteredCallback { get; set; }

    private bool _notARobot = false;
    private bool _showFailedMessage = false;
    
    private int _captchaLetters = 3;
    private string _captcha = "";
    private string _currentValue = "";

    protected override Task OnInitializedAsync()
    {
        _captcha = BlazorCaptcha.Tools.GetCaptchaWord(_captchaLetters);

        return base.OnInitializedAsync();
    }

    private void OnCaptchaEnteredChanged(ChangeEventArgs eventArgs)
    {
        _currentValue = Convert.ToString(eventArgs.Value);
    }

    private void OnCaptchaSubmit()
    {
        _notARobot = _captcha.ToLower().Equals(_currentValue.ToLower());
        if (_notARobot)
        {
            _showFailedMessage = false;
            OnCaptchaEnteredCallback.InvokeAsync(_notARobot);
        }
        else _showFailedMessage = true;
    }
}